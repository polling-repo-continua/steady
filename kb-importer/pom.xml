<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>root</artifactId>
		<groupId>com.sap.research.security.vulas</groupId>
		<version>3.1.14-SNAPSHOT</version>
	</parent>

	<artifactId>kb-importer</artifactId>

	<name>Knowledge Base Importer</name>
	<description></description>

	<dependencies>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.2</version>
		</dependency>
		<!-- Only basic lang classes should be used at compile time -->
		<dependency>
			<groupId>com.sap.research.security.vulas</groupId>
			<artifactId>lang</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- Test dependencies -->
		<dependency>
			<groupId>com.sap.research.security.vulas</groupId>
			<artifactId>shared</artifactId>
			<classifier>tests</classifier> <!-- type=test-jar does not seem to work here, use classifier instead -->
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Runtime dependencies, to avoid compile time dependency on lang-specific 
			classes -->
		<dependency>
			<groupId>com.sap.research.security.vulas</groupId>
			<artifactId>lang-java</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<extensions>true</extensions>
			</plugin>

			<!-- Make the JAR executable, run the PatchAnalyzer by default -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<id>make-shade</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
						
							<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
					<addMavenDescriptor>false</addMavenDescriptor>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>jar-with-dependencies</shadedClassifierName>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>com.sap.psr.vulas.kb.Main</Main-Class>
										<Implementation-Version>${project.version}</Implementation-Version>>
									</manifestEntries>
								</transformer>
							</transformers>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Run the ITxx integration tests in alphabetical order -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<runOrder>alphabetical</runOrder>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
